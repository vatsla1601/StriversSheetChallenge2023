I tried doing it but failed

So i went and first revised my concepts of permutation recursion lecture 12 and 13

All Permitations

class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> list=new ArrayList<>();
        int[] count=new int[nums.length];
        Arrays.fill(count, 0);
        recursion(nums, list, count, ans);
        return ans;
    }

    public void recursion(int[] nums, List<Integer> list, int[] count,List<List<Integer>> ans) {
        
        if(list.size()==nums.length){
            ans.add(new ArrayList<>(list));
            return;
        }
        for(int i=0; i<count.length; i++){
            if(count[i]!=1){
                list.add(nums[i]);
                count[i]=1;
                recursion(nums, list, count, ans);
                list.remove(list.size()-1);
                count[i]=0;
            }
        }
    }
}


