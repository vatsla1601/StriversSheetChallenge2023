//This was an easy q, but the only mistake I was doing was not initialising the prev node as null

/****************************************************************

 Following is the class structure of the Node class:

 class Node {
     public int data;
     public Node next;
     public Node prev;

     Node()
     {
         this.data = 0;
         this.next = null;
         this.prev = null;
     }

     Node(int data)
     {
         this.data = data;
         this.next = null;
         this.prev = null;
     }

     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
         this.prev = next;
     }
 };

 *****************************************************************/

public class Solution
{
    public static Node removeKthNode(Node head, int K)
    {
        // Write your code here.
        Node ans=head;
        int x=0;
        Node temp=head;

        while(temp!=null){
            temp=temp.next;
            x++;
        }

        int get=x-K+1;

        // int count=1;
        // Node prev;
        if (get == 1) {
            ans = head.next;
            if (head.next != null) {
                head.next.prev = null;
            }
            head.next = null;
        } else {
             int count=1;
        Node prev=null;
        while(count!=get){
            prev=head;
            head=head.next;
            count++;
        }
        Node node=head.next;
        // 4
        prev.next=node;
        // 2
    }
    return ans;
}
}
