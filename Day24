//The challenge of this q is to do it in O(N) using 2 pointer

//Knowing merge sort is important for optimisation

//Count Inversions

import java.util.* ;
import java.io.*; 
public class Solution {
    public static long getInversions(long arr[], int n) {
        // Write your code here.
        long count=0;
        for(int i=0; i<arr.length; i++){
            for(int j=i+1; j<arr.length; j++){
            if(arr[i]>arr[j]){
                count++;
            }
            }
        }
        return count;
    }
}
