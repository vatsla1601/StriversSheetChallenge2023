//I was thinking of the spiral matrix approach but by using extra space

//Then I put it on chatgpt and it optimised it

import java.io.*;
import java.util.* ;
import java.util.ArrayList;

public class Solution {
    public static void rotateMatrix(ArrayList<ArrayList<Integer>> mat, int n, int m) {
        int top = 0, bottom = n - 1, left = 0, right = m - 1;

        while (top < bottom && left < right) {
            int prev = mat.get(top + 1).get(left);

            // Move elements from top row (excluding corners) one step right
            for (int i = left; i <= right; i++) {
                int curr = mat.get(top).get(i);
                mat.get(top).set(i, prev);
                prev = curr;
            }
            top++;

            // Move elements from right column (excluding corners) one step down
            for (int i = top; i <= bottom; i++) {
                int curr = mat.get(i).get(right);
                mat.get(i).set(right, prev);
                prev = curr;
            }
            right--;

            // Move elements from bottom row (excluding corners) one step left
            for (int i = right; i >= left; i--) {
                int curr = mat.get(bottom).get(i);
                mat.get(bottom).set(i, prev);
                prev = curr;
            }
            bottom--;

            // Move elements from left column (excluding corners) one step up
            for (int i = bottom; i >= top; i--) {
                int curr = mat.get(i).get(left);
                mat.get(i).set(left, prev);
                prev = curr;
            }
            left++;
        }
    }
}
