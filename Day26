//honestly even for the brute-force I had to see the approach on striver

import java.util.* ;
import java.io.*; 
public class Solution {
    public static long getTrappedWater(long[] arr, int n) {
        // Write your code here.
        long ans=0;
        for(int i=0; i<n; i++){
            int j = i;
            long leftMax=0, rightMax=0;
            while(j>=0){
                leftMax=Math.max(arr[j],leftMax);
                j--;
            }

            j=i;

            while(j<n){
                rightMax=Math.max(arr[j],rightMax);
                j++;
            }

            ans=ans+Math.min(leftMax, rightMax)-arr[i];
        }
        return ans;
    }
}


//better approach

import java.util.* ;
import java.io.*; 
public class Solution {
    public static long getTrappedWater(long[] arr, int n) {
        // Write your code here.
        long ans=0;

        long pre[] = new long[n];
        long suf[] = new long[n];
        pre[0]=arr[0];
        for(int i=1; i<n; i++){
            pre[i]=Math.max(pre[i-1],arr[i]);
        }

        suf[n-1]=arr[n-1];
        for(int i=n-2; i>=0; i--){
            suf[i]=Math.max(suf[i+1],arr[i]);
        }
        
        for(int i=0; i<n; i++){
         

            ans=ans+Math.min(pre[i], suf[i])-arr[i];
        }
        return ans;
    }
}


